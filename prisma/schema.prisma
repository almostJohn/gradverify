// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String              @id @default(cuid())
  name               String
  email              String              @unique
  password           String
  role               Role                @default(STUDENT)
  emailVerified      DateTime?
  resendCount        Int                 @default(0)
  lastResendAt       DateTime?
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  verificationTokens VerificationToken[]
  studentProfile     StudentProfile?
}

model VerificationToken {
  id        String   @id @default(cuid())
  email     String
  token     String   @unique
  expires   DateTime
  createdAt DateTime @default(now())
  User      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String?
}


model StudentProfile {
  id              String   @id @default(cuid())
  userId          String   @unique
  studentId       String
  program         String
  department      String
  dob             String
  pob             String
  psaS3Key        String
  gradPhotoS3Key  String
  awardsS3Key     String?
  status          SubmissionStatus @default(PENDING)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  SUPER_ADMIN
  ADMIN
  FACULTY
  STUDENT
}

enum SubmissionType {
  PSA
  GRADUATION_PHOTO
  AWARD
}

enum SubmissionStatus {
  PENDING
  APPROVED
  REJECTED
}
